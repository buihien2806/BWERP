@page "/users/usercreate"
@using BWERP.Models.User;
@using BWERP.Repositories.Interfaces;

@inject IUserApiClient userApiClient
@inject NavigationManager NavigationManager;
@inject IToastService toastService

<div class="app-content pt-3 p-md-3 p-lg-4">
	<div class="container-xl">
		<h1 class="app-page-title">Create a new user</h1>
		<hr class="mb-4">
		<div class="row g-4 settings-section">
			<div class="app-card app-card-settings shadow-sm p-4">
				<div class="app-card-body">
					<EditForm Model="_user" OnValidSubmit="SubmitTask">
						<DataAnnotationsValidator />
						<div class="mb-3">
							<label for="Name" class="form-label">Username</label>
							<InputText class="form-control" @bind-Value="_user.UserName"></InputText>
							<ValidationMessage For="()=>_user.UserName"></ValidationMessage>
						</div>

						<div class="mb-3">
							<label for="Name" class="form-label">Email</label>
							<InputText class="form-control" @bind-Value="_user.Email"></InputText>
							<ValidationMessage For="()=>_user.Email"></ValidationMessage>
						</div>
						<div class="mb-3">
							<label for="Name" class="form-label">Firstname</label>
							<InputText class="form-control" @bind-Value="_user.FirstName"></InputText>
							<ValidationMessage For="()=>_user.FirstName"></ValidationMessage>
						</div>
						<div class="mb-3">
							<label for="Name" class="form-label">Lastname</label>
							<InputText class="form-control" @bind-Value="_user.LastName"></InputText>
							<ValidationMessage For="()=>_user.LastName"></ValidationMessage>
						</div>
						<button type="submit" class="btn app-btn-primary">Save Changes</button>
						<a class="btn app-btn-secondary" href="/users/userlist">Cancel</a>
					</EditForm>
				</div><!--//app-card-body-->
			</div><!--//app-card-->
		</div><!--//row-->
	</div><!--//container-fluid-->
</div><!--//app-content-->
@code {
	private UserCreateRequest _user = new UserCreateRequest();

	private async Task SubmitTask(EditContext context)
	{
		var result = await userApiClient.CreateUser(_user);
		if (result)
		{
			toastService.ShowSuccess($"{_user.UserName} has been created successfully.");
			NavigationManager.NavigateTo("/users/userlist");
		}
		else
		{
			toastService.ShowError($"An error occurred in progress. Please contact to administrator.");

		}
	}
}