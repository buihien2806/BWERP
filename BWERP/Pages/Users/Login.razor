@page "/users/login"
@using BWERP.Models.User;
@using BWERP.Repositories.Interfaces;
@inject NavigationManager navigationManager;
@inject IAuthenService authenService;

@if (ShowError)
{
	<div class="alert alert-danger">
		<p>@Error</p>
	</div>
}
<div class="card">
	<div class="card-body">
		<h5 class="card-title">Login</h5>
		<EditForm Model="LoginModel" OnValidSubmit="HandleLogin">
			<DataAnnotationsValidator></DataAnnotationsValidator>
			<ValidationSummary></ValidationSummary>
			<div class="form-group">
				<label for="username">Username:</label>
				<InputText id="username" class="form-control" @bind-Value="LoginModel.UserName"></InputText>
				<ValidationMessage For="()=> LoginModel.UserName"></ValidationMessage>
			</div>
			<div class="form-group">
				<label for="password">Password:</label>
				<InputText id="password" class="form-control" @bind-Value="LoginModel.Password"></InputText>
				<ValidationMessage For="()=> LoginModel.Password"></ValidationMessage>
			</div>
			<button type="submit" class="btn btn-success">Login</button>
		</EditForm>
	</div>
</div>

@code {
	private bool ShowError;
	private string Error = "";
	private LoginRequest LoginModel = new LoginRequest();

	private async Task HandleLogin()
	{
		ShowError = false;
		var result = await authenService.Login(LoginModel);
		if (result.Successful)
		{
			navigationManager.NavigateTo("/tasks/tasklist");
		}
		else
		{
			ShowError = true;
			Error = "Invalid username or password";
		}
	}
}
