@page "/tasks/taskcreate"
@using BWERP.Models.Task
@using BWERP.Models.Enums
@using BWERP.Repositories.Interfaces
@using Blazored.Toast.Services;

@inject ITaskApiClient taskApiClient
@inject NavigationManager NavigationManager;
@inject IToastService toastService

<div class="app-content pt-3 p-md-3 p-lg-4">
	<div class="container-xl">
		<h1 class="app-page-title">Create a new task</h1>
		<hr class="mb-4">
		<div class="row g-4 settings-section">
			<div class="app-card app-card-settings shadow-sm p-4">
				<div class="app-card-body">
					<EditForm Model="Task" OnValidSubmit="SubmitTask">
						<DataAnnotationsValidator />
						<div class="mb-3">
							<label for="Name" class="form-label">Name</label>
							<InputText class="form-control" @bind-Value="Task.Name"></InputText>
							<ValidationMessage For="()=>Task.Name"></ValidationMessage>
						</div>

						<div class="mb-3">
							<label for="Name" class="form-label">Priority</label>
							<InputSelect class="form-select" @bind-Value="Task.Priority">
								<option>Select a priority</option>
								@foreach (string item in Enum.GetNames(typeof(Priority)))
								{
									<option value="@item">@item</option>
								}
							</InputSelect>
							<ValidationMessage For="()=>Task.Priority"></ValidationMessage>
						</div>
						<button type="submit" class="btn app-btn-primary">Save Changes</button>
					</EditForm>
				</div><!--//app-card-body-->
			</div><!--//app-card-->
		</div><!--//row-->
	</div><!--//container-fluid-->
</div><!--//app-content-->
@code {
	private TaskCreateRequest Task = new TaskCreateRequest();

	private async Task SubmitTask(EditContext context)
	{
		var result = await taskApiClient.CreateTask(Task);
		if (result)
		{
			toastService.ShowSuccess($"{Task.Name} has been created successfully.");
			NavigationManager.NavigateTo("/tasks/taskList");
		}
		else
		{
			toastService.ShowError($"An error occurred in progress. Please contact to administrator.");

		}
	}
}
